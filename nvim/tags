!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
) ui.nav_file	after/plugin/harpoon.lua	/^vim.keymap.set("n", "<leader>1", function() ui.nav_file(1) end)$/;"	f
) ui.nav_file	after/plugin/harpoon.lua	/^vim.keymap.set("n", "<leader>2", function() ui.nav_file(2) end)$/;"	f
) ui.nav_file	after/plugin/harpoon.lua	/^vim.keymap.set("n", "<leader>3", function() ui.nav_file(3) end)$/;"	f
) ui.nav_file	after/plugin/harpoon.lua	/^vim.keymap.set("n", "<leader>4", function() ui.nav_file(4) end)$/;"	f
) vim.diagnostic.goto_next	after/plugin/lsp.lua	/^    vim.keymap.set("n", "[d", function() vim.diagnostic.goto_next() end, opts)$/;"	f
) vim.diagnostic.goto_prev	after/plugin/lsp.lua	/^    vim.keymap.set("n", "]d", function() vim.diagnostic.goto_prev() end, opts)$/;"	f
) vim.diagnostic.open_float	after/plugin/lsp.lua	/^    vim.keymap.set("n", "<leader>vd", function() vim.diagnostic.open_float() end, opts)$/;"	f
) vim.lsp.buf.code_action	after/plugin/lsp.lua	/^    vim.keymap.set("n", "<leader>vca", function() vim.lsp.buf.code_action() end, opts)$/;"	f
) vim.lsp.buf.definition	after/plugin/lsp.lua	/^    vim.keymap.set("n", "gd", function() vim.lsp.buf.definition() end, opts)$/;"	f
) vim.lsp.buf.hover	after/plugin/lsp.lua	/^    vim.keymap.set("n", "K", function() vim.lsp.buf.hover() end, opts)$/;"	f
) vim.lsp.buf.rename	after/plugin/lsp.lua	/^    vim.keymap.set("n", "<leader>vrn", function() vim.lsp.buf.rename() end, opts)$/;"	f
) vim.lsp.buf.signature_help	after/plugin/lsp.lua	/^    vim.keymap.set("i", "<C-h>", function() vim.lsp.buf.signature_help() end, opts)$/;"	f
) vim.lsp.buf.workspace_symbol	after/plugin/lsp.lua	/^    vim.keymap.set("n", "<leader>vws", function() vim.lsp.buf.workspace_symbol() end, opts)$/;"	f
ColorMyPencils	after/plugin/colors.lua	/^function ColorMyPencils(color)$/;"	f
Dmd	lua/cristian/set.lua	/^function Dmd()$/;"	f
Faunch_dapui	after/plugin/dap.lua	/^function Faunch_dapui(selected_path)$/;"	f
Find_dlls	after/plugin/dap.lua	/^function Find_dlls(on_selected)$/;"	f
Md	lua/cristian/set.lua	/^function Md()$/;"	f
attach_mappings 	after/plugin/dap.lua	/^  attach_mappings = function(_, map)$/;"	f
capture_selected_path	after/plugin/dap.lua	/^local function capture_selected_path(prompt_bufnr, on_selected)$/;"	f
config 	lua/cristian/packer.lua	/^        config = function()$/;"	f
dap.listeners.after.event_initialized["dapui_config"] 	after/plugin/dap.lua	/^dap.listeners.after.event_initialized["dapui_config"] = function ()$/;"	f
if vim.api.nvim_call_function('has', {'nvim-0.5'}) ~	plugin/packer_compiled.lua	/^if vim.api.nvim_call_function('has', {'nvim-0.5'}) ~= 1 then$/;"	f
is_dap_running	lua/cristian/remap.lua	/^local function is_dap_running()$/;"	f
local no_errors, error_msg 	plugin/packer_compiled.lua	/^local no_errors, error_msg = pcall(function()$/;"	f
prompt_bufnr) capture_selected_path	after/plugin/dap.lua	/^    map('i', '<CR>', function(prompt_bufnr) capture_selected_path(prompt_bufnr, Faunch_dapui) end)$/;"	f
prompt_bufnr) capture_selected_path	after/plugin/dap.lua	/^    map('n', '<CR>', function(prompt_bufnr) capture_selected_path(prompt_bufnr, Faunch_dapui) end)$/;"	f
save_profiles	plugin/packer_compiled.lua	/^local function save_profiles(threshold)$/;"	f
setup 	lua/cristian/packer.lua	/^        setup = function() vim.g.mkdp_filetypes = { "markdown" } end,$/;"	f
split_tmux_vertical	lua/cristian/remap.lua	/^local function split_tmux_vertical()$/;"	f
time 	plugin/packer_compiled.lua	/^  time = function(chunk, start) end$/;"	f
time 	plugin/packer_compiled.lua	/^  time = function(chunk, start)$/;"	f
try_loadstring	plugin/packer_compiled.lua	/^local function try_loadstring(s, component, name)$/;"	f
